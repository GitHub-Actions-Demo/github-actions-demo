name: Test & Scan

on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true

env:
  ARTIFACT_NAME: ${{ github.event.pull_request.number || 'main'}}

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

jobs:
  Analize:
    runs-on: ubuntu-latest
    container: docker://node:18.17.0
    steps:
      - name: Check out current branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install Depencencies
        run: npm install -g pnpm && pnpm i --frozen-lockfile
      - name: Lint
        run: pnpm lint:ci
      - name: Check for lint report
        run: find reports/eslint.json
      - name: Upload lint report
        uses: actions/upload-artifact@v3
        with:
          name: Lint Report
          path: reports/eslint.json
      - name: Analyze with SonarCloud
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
        with:
          # Additional arguments for the sonarcloud scanner
          args:
            # Unique keys of your project and organization. You can find them in SonarCloud > Information (bottom-left menu)
            # mandatory
            -Dsonar.projectKey=nick11703_github-actions-demo
            -Dsonar.organization=nick11703
            # Comma-separated paths to directories containing main source files.
            #-Dsonar.sources= # optional, default is project base directory
            # When you need the analysis to take place in a directory other than the one from which it was launched
            #-Dsonar.projectBaseDir= # optional, default is .
            # Comma-separated paths to directories containing test source files.
            #-Dsonar.tests= # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
            # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
            #-Dsonar.verbose= # optional, default is false
