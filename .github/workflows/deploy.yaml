name: Deploy

on:
  workflow_dispatch:
    inputs:
      artifact-name:
        description: Artifact to deploy
        required: false
        type: string
      pr_number:
        description: (OR) PR number for to deploy
        required: false
        type: number
      revision:
        required: false
        type: string
        default: 'latest'
      jira_ticket:
        description: JIRA Ticket ID
        required: true
        type: string
      deploy-env:
        description: Environment
        default: Development
        type: choice
        options:
          - Development
          - Staging
          - Production
  workflow_call:
    inputs:
      artifact-name:
        description: Artifact to deploy
        required: false
        type: string
      pr_number:
        description: (OR) PR number for to deploy
        required: false
        type: number
      revision:
        required: false
        type: string
        default: 'latest'
      deploy-env:
        description: Environment
        default: Development
        type: string
        required: false
    secrets:
      WIF_PROVIDER:
        required: true
      WIF_SERVICE_ACCOUNT:
        required: true

env:
  PROJECT_ID: github-actions-demo-399800
  GAR_LOCATION: us-east5
  REPOSITORY: github-actions-demo
  TAG_REVISION: ${{ inputs.revision || 'latest' }}

jobs:
  Deployment:
    # Only allow this workflow to run from the main branch
    # It can can deploy other branches, but the main branch
    # should be the source of code for this workflow
    if: github.ref_name == github.event.repository.default_branch
    environment: ${{ inputs.deploy-env }}
    permissions:
      contents: 'read'
      id-token: 'write'
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Add label to PR - ${{ vars.APP_DEPLOYING_LABEL }}
        if: inputs.pr_number
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let issue_number = ${{ inputs.pr_number }};
            await github.rest.issues.removeLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              name: '${{ vars.APP_DEPLOYED_LABEL }}'
            });
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              labels: ['${{ vars.APP_DEPLOYING_LABEL }}']
            });

      - name: Get Artifact Name
        id: artifact
        uses: GitHub-Actions-Demo/action-artifact-name@v1
        with:
          pr-number: ${{ inputs.pr_number }}
          artifact-name: ${{ inputs.artifact-name }}

      - name: Test Artifact Name Action
        run: echo ${{ steps.artifact.outputs.artifact-name }}

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.GCP_CLOUD_RUN_SERVICE_NAME || steps.artifact.outputs.artifact-name }}
          region: ${{ env.GAR_LOCATION }}
          # NOTE: If using a pre-built image, update the image name here
          # us-east5-docker.pkg.dev/github-actions-demo-399800/github-actions-demo
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ steps.artifact.outputs.artifact-name }}:${{ env.TAG_REVISION }}
          # NOTE: You can also set env variables here:
          #  env_vars: |
          #  NODE_ENV=production
          #  TOKEN_EXPIRE=6400

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}

      - name: 'Comment on PR'
        if: inputs.pr_number
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let fs = require('fs');
            let issue_number = ${{ inputs.pr_number }};
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: `App has been deployed for testing ${{ inputs.jira_ticket }}
                You can view it at ${{ steps.deploy.outputs.url }}`
            });
            await github.rest.issues.removeLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              name: '${{ vars.APP_DEPLOYING_LABEL }}'
            });
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              labels: ['${{ vars.APP_DEPLOYED_LABEL }}']
            });
