name: Build & Push Docker Image

on:
  push:
    branches: [ "main" ]
  workflow_call:
    inputs:
      artifact-name:
        required: false
        type: string
    secrets:
      WIF_PROVIDER:
        required: true
      WIF_SERVICE_ACCOUNT:
        required: true

env:
  # ARTIFACT_NAME: ${{ inputs.artifact-name || github.event.pull_request.number || 'app-main'}}
  PROJECT_ID: github-actions-demo-399800
  GAR_LOCATION: us-east5
  REPOSITORY: github-actions-demo

jobs:
  Docker:
    name: Build & Push Docker Image
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Check out current branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Install Depencencies
        run: npm install -g pnpm && pnpm i --frozen-lockfile && pnpm build:actions

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: Get Artifact Name
        id: artifact
        uses: ./.github/actions/get-artifact-name/
        with:
          pr-number: ${{ github.event.pull_request.number }}
          artifact-name: ${{ inputs.artifact-name }}

      - name: Test Artifact Name Action
        run: echo ${{ steps.artifact.outputs.artifact-name }}
      # - name: Build and Push Container
      #   run: |-
      #     docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.ARTIFACT_NAME }}:latest" ./
      #     docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.ARTIFACT_NAME }}:latest"

      # END - Docker auth and build